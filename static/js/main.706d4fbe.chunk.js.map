{"version":3,"sources":["components/Menu/Navbar.js","components/Menu/MenuButton.js","components/Menu/Menu.js","components/Pages/About.js","components/Pages/Home/Home.js","components/Pages/Home/FindFood.js","components/Pages/Inventory/Inventory.js","components/Pages/SetUp.js","components/Pages/NewItem/ItemExpiry.js","components/Pages/NewItem/NewItemForm.js","components/Pages/NewItem/NewItem.js","components/Pages/Inventory/Edit.js","components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","onClick","toggle","className","to","MenuButton","Menu","useState","setToggle","Navbar","About","Home","props","items","console","log","FindFood","sortConfig","setSortConfig","sortedItems","useMemo","sort","a","b","key","direction","type","requestSort","map","item","date","Moment","expiry","format","name","category","location","amount","Inventory","deleteHandler","id","updateStorage","filter","deletedItem","localStorage","setItem","JSON","stringify","SetUp","ItemExpiry","startDate","Date","dateFormat","selected","onChange","placeholderText","NewItemForm","useLocalStorage","setName","setCategory","setLocation","setAmount","setExpiry","initialValue","window","getItem","parse","error","storedValue","setStoredValue","value","valueToStore","Function","onSubmit","e","preventDefault","Math","random","placeholder","required","target","NewItem","setItems","Edit","App","localItems","exact","path","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA6BeA,EA1BA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACvB,OACI,cAAC,IAAD,UACK,qBAAKC,UAAS,qBAAgBD,EAAS,WAAa,aAApD,SACG,qBAAIC,UAAU,UAAd,UACI,cAAC,IAAD,CAASF,QAASA,EAASG,GAAG,IAA9B,kBAGA,cAAC,IAAD,CAASH,QAASA,EAASG,GAAG,OAA9B,0BAGA,cAAC,IAAD,CAASH,QAASA,EAASG,GAAG,SAA9B,8BAGA,cAAC,IAAD,CAASH,QAASA,EAASG,GAAG,aAA9B,8BAGA,cAAC,IAAD,CAASH,QAASA,EAASG,GAAG,SAA9B,2BClBPC,EAAa,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACpC,OACE,sBACEC,UAAS,0BAAqBD,EAAS,kBAAoB,IAC3DD,QAAUA,KCAHK,G,OAAO,WAAO,IAAD,EACMC,oBAAS,GADf,mBACfL,EADe,KACPM,EADO,KAEtB,OACI,eAAC,WAAD,WACI,cAACC,EAAD,CACIP,OAAQA,EACRD,QAAS,kBAAMO,GAAWN,MAC9B,cAAC,EAAD,CACIA,OAAQA,EACJD,QAAS,kBAAMO,GAAWN,WCZjCQ,G,MAAQ,kBACjB,eAAC,WAAD,WACI,qBAAKP,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,qBAEJ,sBAAKA,UAAU,YAAf,UACI,qDACA,+hBCLCQ,EAAO,SAACC,GAAW,IAAD,EAEDL,mBAASK,GAFR,mBAEpBC,EAFoB,UAK3B,OAFAC,QAAQC,IAAIF,GAGZ,eAAC,WAAD,WACI,qBAAKV,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,kCAEJ,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,aAAb,4EAEA,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,yBAA/B,qC,yBCbCa,EAAW,SAACJ,GAAW,IACxBC,EAAUD,EAAVC,MADuB,EAGKN,mBAAS,IAHd,mBAGxBU,EAHwB,KAGZC,EAHY,KAMzBC,EAAcC,mBAAS,WACzB,IAAID,EAAW,YAAON,GAatB,OAXmB,OAAfI,GACAE,EAAYE,MAAK,SAACC,EAAGC,GACjB,OAAID,EAAEL,EAAWO,KAAOD,EAAEN,EAAWO,KACD,cAAzBP,EAAWQ,WAA6B,EAAI,EAEnDH,EAAEL,EAAWO,KAAOD,EAAEN,EAAWO,KACD,cAAzBP,EAAWQ,UAA4B,GAAK,EAEhD,KAGRN,IACR,CAACN,EAAOI,IAUX,OACI,eAAC,WAAD,WACI,qBAAKd,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,gCAEJ,sBAAKA,UAAU,YAAf,UACI,oGAEJ,wBAAOA,UAAU,QAAjB,UACI,uBAAOA,UAAU,eAAjB,SACI,+BACI,sCASA,2CAQA,2CAOA,yCAOA,wCACI,wBAAQuB,KAAK,SACbzB,QAAU,kBApDd,SAACuB,GACjB,IAAIC,EAAY,YACZR,EAAWO,MAAQA,GAAgC,cAAzBP,EAAWQ,YACrCA,EAAY,cAEhBP,EAAc,CAAEM,MAAKC,cA+CeE,CAAY,WAD5B,4BAQZ,gCACKR,EAAYS,KAAI,SAACC,GACdf,QAAQC,IAAI,QAASc,GAErB,IAAMC,EAAOC,IAAOF,EAAKG,QAAQC,OAAO,aAExC,OADAnB,QAAQC,IAAIe,GAER,+BACI,6BAAKD,EAAKK,OACV,6BAAKL,EAAKM,WACV,6BAAKN,EAAKO,WACV,6BAAKP,EAAKQ,SACV,6BAAKP,MALAD,EAAKG,uB,2BCxF7BM,EAAY,SAAC1B,GAAW,IACzBC,EAAUD,EAAVC,MADwB,EAGIN,mBAAS,IAHb,mBAGzBU,EAHyB,KAGbC,EAHa,KAM1BC,EAAcC,mBAAS,WACzB,IAAID,EAAW,YAAON,GAYtB,OAXmB,OAAfI,GACAE,EAAYE,MAAK,SAACC,EAAGC,GACjB,OAAID,EAAEL,EAAWO,KAAOD,EAAEN,EAAWO,KACD,cAAzBP,EAAWQ,WAA6B,EAAI,EAEnDH,EAAEL,EAAWO,KAAOD,EAAEN,EAAWO,KACD,cAAzBP,EAAWQ,UAA4B,GAAK,EAEhD,KAGRN,IACR,CAACN,EAAOI,IAELU,EAAc,SAACH,GACjB,IAAIC,EAAY,YACZR,EAAWO,MAAQA,GAAgC,cAAzBP,EAAWQ,YACrCA,EAAY,cAEhBP,EAAc,CAAEM,MAAKC,eAGnBc,EAAa,uCAAG,WAAOC,GAAP,iBAAAlB,EAAA,sDAEZmB,EAAgB5B,EAAM6B,QAAO,SAAAb,GAAI,OAAIA,EAAKW,KAAOA,KACvD1B,QAAQC,IAAI,gBAAiB0B,GAGvBE,EAAcC,aAAaC,QAAQ,QAASC,KAAKC,UAAUN,IACjE3B,QAAQC,IAAI4B,GAPM,2CAAH,sDAUnB,OACI,eAAC,WAAD,WACI,qBAAKxC,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,gCAEJ,sBAAKA,UAAU,YAAf,UACI,mDACA,uBACJ,wBAAOA,UAAU,QAAjB,UACI,uBAAOA,UAAU,eAAjB,SACI,+BACI,6BACI,wBACIuB,KAAK,SACLzB,QAAU,kBAAM0B,EAAY,SAFhC,oBAOJ,6BACI,wBAAQD,KAAK,SAASzB,QAAU,kBAAM0B,EAAY,aAAlD,wBAIJ,6BACI,wBAAQD,KAAK,SAASzB,QAAU,kBAAM0B,EAAY,aAAlD,wBAIJ,6BACI,wBAAQD,KAAK,SAASzB,QAAU,kBAAM0B,EAAY,WAAlD,sBAIJ,6BACI,wBAAQD,KAAK,SAASzB,QAAU,kBAAM0B,EAAY,WAAlD,sBAIJ,sCAGA,6CAKR,gCACKR,EAAYS,KAAI,SAACC,GAGd,IAAMC,EAAOC,IAAOF,EAAKG,QAAQC,OAAO,aAExC,OACI,+BACI,6BAAKJ,EAAKK,OACV,6BAAKL,EAAKM,WACV,6BAAKN,EAAKO,WACV,6BAAKP,EAAKQ,SACV,6BAAKP,IACL,6BAAI,cAAC,IAAD,CAAM1B,GAAE,gBAAWyB,GAAnB,oBACJ,6BACI,wBACA5B,QAAS,kBAAMsC,EAAcV,EAAKW,KADlC,wBARCX,EAAKW,mBCjG7BQ,EAAQ,kBACjB,qBAAK7C,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,kC,kBCAK8C,G,OAAa,SAACrC,GACvB,IAAMsC,EAAY,IAAIC,KAEtB,OACI,cAAC,IAAD,CACIC,WAAW,aACXC,SAAUH,EACVI,SAAU1C,EAAM0C,SAChBC,gBAAgB,yBCRfC,EAAc,SAAC5C,GAAW,IAAD,EAEV6C,EAAgB,OAAQ,IAFd,mBAE3BvB,EAF2B,KAErBwB,EAFqB,OAGFD,EAAgB,WAAY,IAH1B,mBAG3BtB,EAH2B,KAGjBwB,EAHiB,OAIFF,EAAgB,WAAY,IAJ1B,mBAI3BrB,EAJ2B,KAIjBwB,EAJiB,OAKNH,EAAgB,SAAS,IALnB,mBAK3BpB,EAL2B,KAKnBwB,EALmB,OAMNJ,EAAgB,SAAS,IANnB,mBAM3BzB,EAN2B,KAMnB8B,EANmB,KA+BlC,SAASL,EAAgBjC,EAAKuC,GAAe,IAAD,EACFxD,oBAAS,WAC3C,IACI,IAAMsB,EAAOmC,OAAOpB,aAAaqB,QAAQzC,GACzC,OAAOK,EAAOiB,KAAKoB,MAAMrC,GAAQkC,EACnC,MAAOI,GAEL,OADArD,QAAQC,IAAIoD,GACLJ,MAPyB,mBACjCK,EADiC,KACpBC,EADoB,KAqBxC,MAAO,CAACD,EAVS,SAAAE,GACb,IACI,IAAMC,EACND,aAAiBE,SAAWF,EAAMF,GAAeE,EACjDD,EAAeE,GACfP,OAAOpB,aAAaC,QAAQrB,EAAKsB,KAAKC,UAAUwB,IAClD,MAAOJ,GACLrD,QAAQC,IAAIoD,MAMxB,OACI,cAAC,WAAD,UACI,uBAAMM,SAjDO,SAACC,GAClBA,EAAEC,iBACF7D,QAAQC,IAAImB,EAAMC,EAAUC,EAAUC,EAAQL,GAG9CpB,EAAM6D,SAAS,CACXjC,GAAIoC,KAAKC,SACT3C,OACAC,WACAC,WACAC,SACAL,WAIJ0B,EAAQ,IACRC,EAAY,IACZC,EAAY,IACZC,EAAU,IACVC,EAAU,KA8BwB3D,UAAU,YAAxC,UACI,sBAAKA,UAAU,WAAf,UACI,uBAAOA,UAAU,aAAjB,0BACI,uBACIuB,KAAK,OACLoD,YAAY,kBACZC,UAAQ,EACRT,MAAOpC,EACPoB,SAAU,SAAAoB,GAAC,OAAIhB,EAAQgB,EAAEM,OAAOV,aAI5C,qBAAKnE,UAAU,WAAf,SACI,uBAAOA,UAAU,aAAjB,0BAEJ,yBACIqC,GAAG,gBACHN,KAAK,gBACL6C,UAAQ,EACRT,MAAOnC,EACPmB,SAAU,SAAAoB,GAAC,OAAIf,EAAYe,EAAEM,OAAOV,QALxC,UAMQ,wBACIA,MAAOnC,EADX,mCAIA,wBAAQmC,MAAM,QAAd,oCACA,wBAAQA,MAAM,SAAd,2BACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,wCAGR,sBAAKnE,UAAU,WAAf,UACI,uBAAOA,UAAU,aAAjB,yBACA,uBACIuB,KAAK,OACLoD,YAAY,gDACZC,UAAQ,EACRT,MAAOlC,EACPkB,SAAU,SAAAoB,GAAC,OAAId,EAAYc,EAAEM,OAAOV,aAI5C,sBAAKnE,UAAU,WAAf,UACI,uBAAOA,UAAU,aAAjB,8BACA,uBACIuB,KAAK,OACLoD,YAAY,iFACZC,UAAQ,EACRT,MAAOjC,EACPiB,SAAU,SAAAoB,GAAC,OAAIb,EAAUa,EAAEM,OAAOV,aAK1C,sBAAKnE,UAAU,WAAf,UACI,uBAAOA,UAAU,aAAjB,kCACA,cAAC,EAAD,CACImE,MAAOtC,EACPsB,SAAU,SAAAxB,GAAI,OAAIgC,EAAUhC,SAEpC,uBAAOJ,KAAK,SACRvB,UAAU,aACVmE,MAAM,iBC9FnB,IAAMW,EAAU,WAAO,IAAD,EAxB5B,SAAyBzD,EAAKuC,GAAe,IAAD,EACHxD,oBAAS,WAC3C,IACI,IAAMsB,EAAOmC,OAAOpB,aAAaqB,QAAQzC,GACzC,OAAOK,EAAOiB,KAAKoB,MAAMrC,GAAQkC,EACnC,MAAOI,GAEL,OADArD,QAAQC,IAAIoD,GACLJ,MAP0B,mBAClCK,EADkC,KACrBC,EADqB,KAqBzC,MAAO,CAACD,EAVS,SAAAE,GACb,IACI,IAAMC,EACND,aAAiBE,SAAWF,EAAMF,GAAeE,EACjDD,EAAeE,GACfP,OAAOpB,aAAaC,QAAQrB,EAAKsB,KAAKC,UAAUwB,IAClD,MAAOJ,GACLrD,QAAQC,IAAIoD,MAOMV,CAAgB,QAAS,IAD1B,mBAClB5C,EADkB,KACXqE,EADW,KAQzB,OACI,eAAC,WAAD,WACI,qBAAK/E,UAAU,iBAAf,SACI,oBAAIA,UAAU,aAAd,yBAGJ,cAAC,EAAD,CAAasE,SAVL,SAAC5C,GACbqD,EAAS,GAAD,mBAAKrE,GAAL,CAAYgB,YChCfsD,G,OAAO,SAACvE,GACjB,OACI,eAAC,WAAD,WACK,qBAAKT,UAAU,iBAAf,SACG,oBAAIA,UAAU,aAAd,oBAEJ,uDCFCiF,EAAM,WAEjB,IAAMC,EAAazC,aAAaqB,QAAQ,SAFjB,EAIK1D,mBAASuC,KAAKoB,MAAMmB,IAJzB,mBAIdxE,EAJc,UAMvB,OAEE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,cAAC,EAAD,CAAM3E,MAAOA,OACpD,cAAC,IAAD,CAAO0E,KAAK,OAAOC,UAAWP,IAC9B,cAAC,IAAD,CAAOM,KAAK,SAASC,UAAWxC,IAChC,cAAC,IAAD,CAAOuC,KAAK,aAAaC,UAAY,kBAAM,cAAC,EAAD,CAAW3E,MAAOA,OAC7D,cAAC,IAAD,CAAO0E,KAAK,SAASC,UAAW9E,IAChC,cAAC,IAAD,CAAO6E,KAAK,YAAYC,UAAY,kBAAM,cAAC,EAAD,CAAU3E,MAAOA,OAC3D,cAAC,IAAD,CAAO0E,KAAK,YAAYC,UAAWL,WCZ5BM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBlB,UACxC,8BAAqBmB,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.706d4fbe.chunk.js","sourcesContent":["import React from 'react'; \nimport { HashRouter, NavLink } from 'react-router-dom';\n\nconst NavBar = ({ onClick, toggle }) => {\n    return (\n        <HashRouter>\n             <div className={`slide-menu ${toggle ? \"slide-in\" : \"slide-out\"}`}>\n                <ul className=\"nav-bar\">\n                    <NavLink onClick={onClick} to='/' >\n                        Home\n                    </NavLink>\n                    <NavLink onClick={onClick} to='/new' >\n                        Add New Item\n                    </NavLink>\n                    <NavLink onClick={onClick} to='/setup' >\n                    Configure Pantry\n                    </NavLink>\n                    <NavLink onClick={onClick} to='/inventory' >\n                        Pantry Inventory\n                    </NavLink>\n                    <NavLink onClick={onClick} to='/about' >\n                        About\n                    </NavLink>\n                </ul>\n            </div>\n        </HashRouter>\n    );\n};\n\nexport default NavBar\n\n\n","import React from \"react\";\n\nexport const MenuButton = ({ onClick, toggle }) => {\n  return (\n    <span\n      className={`toggle-menu-btn ${toggle ? \"active-menu-btn\" : \"\"}`}\n      onClick={(onClick)}\n    ></span>\n  );\n};","import React, { Fragment, useState } from 'react';\n\nimport Navbar from './Navbar';\nimport { MenuButton } from './MenuButton';\nimport './Menu.css'\n\nexport const Menu = () => {\n    const [toggle, setToggle] = useState(false);\n    return (\n        <Fragment>\n            <Navbar \n                toggle={toggle} \n                onClick={() => setToggle(!toggle)} />\n            <MenuButton \n                toggle={toggle} \n                    onClick={() => setToggle(!toggle)} />\n        </Fragment>\n    );\n};","import React, { Fragment } from 'react';\nimport './Pages.css'\n\nexport const About = () => (\n    <Fragment>\n        <div className=\"page-container\">\n            <h1 className=\"page-title\">About</h1>\n        </div>\n        <div className=\"container\">\n            <h2>How to use this App</h2>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam dignissim placerat luctus. Nunc viverra magna magna, at pulvinar odio finibus id. Curabitur convallis ipsum ac iaculis fermentum. Proin sit amet nulla lorem. Nunc id vulputate nibh, ut efficitur ligula. Morbi sodales semper convallis. Morbi pellentesque, erat ullamcorper rhoncus semper, dolor erat ullamcorper sem, sit amet aliquam nibh ligula in ex. In eget justo sem. Vivamus at elit porttitor, pretium velit sit amet, feugiat lacus. </p>\n        </div>\n    </Fragment>\n);","import React, { Fragment, useState } from 'react';\n\nimport { Link } from 'react-router-dom'\nimport '../Pages.css'\n\nexport const Home = (props) => {\n\n    const [items, setItems] = useState(props)\n    console.log(items)\n\n    return (\n    <Fragment>\n        <div className=\"page-container\">\n            <h1 className=\"page-title\">What Should I Eat?</h1>\n        </div>\n        <div className=\"container\">\n            <p className=\"home-parag\">Click the button to find your top foods to Eat before expiry. </p>\n           \n            <Link to='/findfood' className=\"submit-btn home-submit\">Find Food to Eat</Link>\n        </div>\n\n    </Fragment>\n    )\n};\n\n    \n","import React, { Fragment, useState, useMemo } from \"react\";\nimport Moment from 'moment';\n\nimport '../Pages.css'\n\nexport const FindFood = (props) => {\n    const { items } = props;\n \n    const [sortConfig, setSortConfig] = useState({});\n    \n    // need to pass useMemo function to display the change on the DOM\n    const sortedItems = useMemo( () => {\n        let sortedItems = [...items];\n       \n        if (sortConfig !== null) {\n            sortedItems.sort((a, b) => {\n                if (a[sortConfig.key] < b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\n                }\n                if (a[sortConfig.key] > b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\n                }\n                return 0;\n            });\n        }\n        return sortedItems;\n    }, [items, sortConfig]);\n    \n    const requestSort = (key) => {\n        let direction = 'ascending';\n        if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n            direction = 'descending';\n        }\n        setSortConfig({ key, direction });\n    };\n\n    return (\n        <Fragment>\n            <div className=\"page-container\">\n                <h1 className=\"page-title\">Pantry Inventory</h1>\n            </div>\n            <div className=\"container\">\n                <p>list table coming soon of all items, make sure has sorting capacity</p>\n                \n            <table className=\"table\">\n                <thead className=\"table-header\">\n                    <tr>\n                        <th>\n                        Name\n                            {/* <button \n                                type=\"button\" \n                                // onClick={ () => requestSort('name')}\n                                >\n                            Name \n                            </button> */}\n                        </th>\n                        <th> Category\n                            {/* <button \n                                type=\"button\" \n                                // onClick={ () => requestSort('category')}\n                                >\n                            Category \n                            </button> */}\n                        </th>\n                        <th> Location\n                            {/* <button type=\"button\" \n                            // onClick={ () => requestSort('location')}\n                            >\n                            Location \n                            </button> */}\n                        </th>\n                        <th> Amount\n                            {/* <button type=\"button\" \n                            // onClick={ () => requestSort('amount')}\n                            >\n                            Amount \n                            </button> */}\n                        </th>\n                        <th>Expiry\n                            <button type=\"button\" \n                            onClick={ () => requestSort('expiry')}\n                            >\n                            Expiry \n                            </button>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {sortedItems.map((item) => {\n                        console.log('items', item)\n                        // Change date format for display\n                        const date = Moment(item.expiry).format('Do MMM YY')\n                        console.log(date)\n                        return (\n                            <tr key={item.expiry}>\n                                <th>{item.name}</th>\n                                <th>{item.category}</th>\n                                <th>{item.location}</th>\n                                <th>{item.amount}</th>\n                                <th>{date}</th>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            </div>\n        </Fragment>\n    )\n}\n","import React, { Fragment, useState, useMemo } from 'react';\nimport Moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nimport '../Pages.css'\n\nexport const Inventory = (props) => {\n    const { items } = props;\n \n    const [sortConfig, setSortConfig] = useState({});\n    \n    // need to pass useMemo function to display the change on the DOM\n    const sortedItems = useMemo( () => {\n        let sortedItems = [...items];\n        if (sortConfig !== null) {\n            sortedItems.sort((a, b) => {\n                if (a[sortConfig.key] < b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\n                }\n                if (a[sortConfig.key] > b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\n                }\n                return 0;\n            });\n        }\n        return sortedItems;\n    }, [items, sortConfig]);\n    \n    const requestSort = (key) => {\n        let direction = 'ascending';\n        if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n            direction = 'descending';\n        }\n        setSortConfig({ key, direction });\n    };\n\n    const deleteHandler = async (id) => {\n        // Filter through props 'items' array, to find ID clicked\n        const updateStorage = items.filter(item => item.id !== id);\n        console.log('updateStorage', updateStorage) //removes item clicked, consoles new array!!\n        \n        // Delete orginal local storage and replace with above\n        const deletedItem = localStorage.setItem('items', JSON.stringify(updateStorage));\n        console.log(deletedItem)\n    }\n\n    return (\n        <Fragment>\n            <div className=\"page-container\">\n                <h1 className=\"page-title\">Pantry Inventory</h1>\n            </div>\n            <div className=\"container\">\n                <p>Sort by any value.</p>\n                <br></br>\n            <table className=\"table\">\n                <thead className=\"table-header\">\n                    <tr>\n                        <th>\n                            <button \n                                type=\"button\" \n                                onClick={ () => requestSort('name')}\n                                >\n                            Name \n                            </button>\n                        </th>\n                        <th>\n                            <button type=\"button\" onClick={ () => requestSort('category')}>\n                            Category \n                            </button>\n                        </th>\n                        <th>\n                            <button type=\"button\" onClick={ () => requestSort('location')}>\n                            Location \n                            </button>\n                        </th>\n                        <th>\n                            <button type=\"button\" onClick={ () => requestSort('amount')}>\n                            Amount \n                            </button>\n                        </th>\n                        <th>\n                            <button type=\"button\" onClick={ () => requestSort('expiry')}>\n                            Expiry \n                            </button>\n                        </th>\n                        <th>\n                            Edit\n                        </th>\n                        <th>\n                            Delete\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {sortedItems.map((item) => {\n                        // console.log('items', item)\n                        // Change date format for display\n                        const date = Moment(item.expiry).format('Do MMM YY')\n                        // console.log(date)\n                        return (\n                            <tr key={item.id}>\n                                <th>{item.name}</th>\n                                <th>{item.category}</th>\n                                <th>{item.location}</th>\n                                <th>{item.amount}</th>\n                                <th>{date}</th>\n                                <th><Link to={`/edit/${item}`} >Edit</Link></th>\n                                <th>\n                                    <button \n                                    onClick={() => deleteHandler(item.id)}\n                                    >\n                                    Delete</button>\n                                </th>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            </div>\n        </Fragment>\n    );\n}\n","import React from 'react';\nimport './Pages.css'\n\nexport const SetUp = () => (\n    <div className=\"page-container\">\n        <h1 className=\"page-title\">Configure Pantry </h1>\n    </div>\n);","import React from 'react';\nimport DatePicker from 'react-datepicker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const ItemExpiry = (props) => {\n    const startDate = new Date();\n\n    return (\n        <DatePicker \n            dateFormat=\"dd/MM/yyyy\"\n            selected={startDate} \n            onChange={props.onChange} \n            placeholderText=\"Select a date here\"\n            // inline\n            />\n    );\n};","import React, { Fragment, useState } from 'react';\n\nimport { ItemExpiry } from './ItemExpiry';\n\n\nexport const NewItemForm = (props) => {\n\n    const [name, setName] = useLocalStorage('name', '');\n    const [category, setCategory] = useLocalStorage('category', '');\n    const [location, setLocation] = useLocalStorage('location', '');\n    const [amount, setAmount] = useLocalStorage('amount','');\n    const [expiry, setExpiry] = useLocalStorage('expiry','');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(name, category, location, amount, expiry);\n\n        // Passed to parent, NewItem to store as object in local storage array. \n        props.onSubmit({\n            id: Math.random(),\n            name, \n            category, \n            location,\n            amount,\n            expiry\n        })\n\n        // Clears form on submit\n        setName('')\n        setCategory('')\n        setLocation('')\n        setAmount('')\n        setExpiry('')\n    }; \n\n    // Local Storage \n    function useLocalStorage(key, initialValue) {\n        const [storedValue, setStoredValue] = useState(() => {\n            try {\n                const item = window.localStorage.getItem(key);\n                return item ? JSON.parse(item) : initialValue;\n            } catch (error) {\n                console.log(error);\n                return initialValue;\n            }\n        });\n\n        const setValue = value => {\n            try {\n                const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n                setStoredValue(valueToStore);\n                window.localStorage.setItem(key, JSON.stringify(valueToStore));\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        return [storedValue, setValue];\n    }\n\n    return (\n        <Fragment>\n            <form onSubmit={handleSubmit} className=\"container\">\n                <div className=\"form-row\">\n                    <lable className=\"form-label\"> Item Name: </lable>         \n                        <input \n                            type=\"text\"\n                            placeholder=\"Enter item name\"\n                            required\n                            value={name}\n                            onChange={e => setName(e.target.value)} \n                        />\n                </div>\n\n                <div className=\"form-row\">\n                    <label className=\"form-label\"> Category </label>\n                </div>\n                <select \n                    id=\"food-category\" \n                    name=\"food-category\"\n                    required\n                    value={category}\n                    onChange={e => setCategory(e.target.value)}>\n                        <option \n                            value={category}\n                            > Select your category\n                        </option>\n                        <option value=\"Fresh\">Fresh/Room Temperature</option>\n                        <option value=\"Fridge\"> Refrigerated</option>\n                        <option value=\"Frozen\">Frozen</option>\n                        <option value=\"Pantry\"> Pantry Items/Dry Goods</option>   \n                </select>\n\n                <div className=\"form-row\">\n                    <lable className=\"form-label\"> Location: </lable>         \n                    <input \n                        type=\"text\"\n                        placeholder=\"Enter location e.g. kitchen fridge, top shelf\"\n                        required\n                        value={location}\n                        onChange={e => setLocation(e.target.value)} \n                    />\n                </div>               \n                    \n                <div className=\"form-row\">\n                    <lable className=\"form-label\"> Amount/Volume: </lable>         \n                    <input \n                        type=\"text\"\n                        placeholder=\"Enter the size/volume of your item e.g. 1 bunch, 400gm, single chicken breast.\"\n                        required\n                        value={amount}\n                        onChange={e => setAmount(e.target.value)} \n                    />\n                </div>\n                \n            {/* TODO: add placeholder for date, tried in ItemExpiry but not workign there either, docs say it should! */}\n                <div className=\"form-row\">\n                    <lable className=\"form-label\">Select Expiry Date: </lable>    \n                    <ItemExpiry \n                        value={expiry}\n                        onChange={date => setExpiry(date)} />     \n                </div>\n                <input type=\"submit\" \n                    className=\"submit-btn\"\n                    value=\"Submit\"\n                />\n            </form>\n        </Fragment>\n    );\n}\n","import React, { Fragment, useState } from 'react'; \nimport { NewItemForm } from './NewItemForm';\n\nimport '../Pages.css'\n\n // Local Storage. TODO: make DRY (this function also in NewItemForm)\n function useLocalStorage(key, initialValue) {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    const setValue = value => {\n        try {\n            const valueToStore =\n            value instanceof Function ? value(storedValue) : value;\n            setStoredValue(valueToStore);\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return [storedValue, setValue];\n}\n\nexport const NewItem = () => {\n    const [items, setItems] = useLocalStorage('items', '')\n\n    // push item object into an array. \n    const addItem = (item) => {\n        setItems([...items, item])\n    }\n\n    return (\n        <Fragment>\n            <div className=\"page-container\">\n                <h1 className=\"page-title\">New Item </h1>\n            </div>\n            \n            <NewItemForm onSubmit={ addItem } />\n        </Fragment>\n    )\n\n}\n\n\n\n","import { render } from '@testing-library/react';\nimport React, { Fragment } from 'react'; \n\nexport const Edit = (props) => {\n    return (\n        <Fragment>\n             <div className=\"page-container\">\n                <h1 className=\"page-title\">Edit</h1>\n            </div>\n            <h2>Edit coming soon</h2>\n        </Fragment>\n    )\n}","import React, {useState} from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport { Menu } from './Menu';\nimport { Home, NewItem, SetUp, Inventory, About, FindFood, Edit } from './index';\n\n\nexport const App = () => {\n\n  const localItems = localStorage.getItem('items');\n    // passes the localStorage items to state. \n    const [items, setItems] = useState(JSON.parse(localItems));\n\n  return (\n    \n    <HashRouter>\n      <Menu />\n      <Switch>\n        <Route exact path='/' component={() => <Home items={items}/>} />\n        <Route path='/new' component={NewItem} />\n        <Route path='/setup' component={SetUp} />\n        <Route path='/inventory' component={ () => <Inventory items={items}/>} />\n        <Route path='/about' component={About} />\n        <Route path='/findfood' component={ () => <FindFood items={items} />} />\n        <Route path='/edit/:id' component={Edit}/>\n      </Switch>\n    </HashRouter>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}